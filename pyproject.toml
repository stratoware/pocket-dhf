# Copyright (c) 2025 Stratoware LLC. All rights reserved.

[tool.poetry]
name = "pocket-dhf"
version = "1.0.0"
description = "Pocket DHF - A lightweight Device History File management system"
authors = ["Stratoware LLC <info@stratoware.com>"]
readme = "README.md"
packages = [
    {include = "app"}
]

[tool.poetry.dependencies]
python = "^3.8.1"
flask = "^3.0.0"
pyyaml = "^6.0"
python-dateutil = "^2.8.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
pre-commit = "^3.3.0"
# Advanced Python linting
mypy = "^1.8.0"
bandit = "^1.7.5"
safety = "^2.3.5"
pylint = "^3.0.3"
# Frontend linting (using npm packages via pre-commit)
# Data/Config linting
yamllint = "^1.35.1"
# Security
detect-secrets = "^1.4.0"

[tool.poetry.scripts]
pocket-dhf = "main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=app --cov-report=html --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    "build",
    "dist",
    ".venv",
    "venv",
    "htmlcov"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0911",  # too-many-return-statements
    "R0912",  # too-many-branches
    "R0914",  # too-many-locals
    "R0904",  # too-many-public-methods
    "W0718",  # broad-exception-caught
    "W1510",  # subprocess-run-check
    "W0612",  # unused-variable
    "W0613",  # unused-argument
    "R1705",  # no-else-return
    "R0801",  # duplicate-code
    "E0401",  # import-error
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 10
max-locals = 20
max-returns = 10
max-branches = 15
max-statements = 60
